<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storbeck Blog</title>
    <link>https://storbeck.dev/</link>
    <description>Technical blog by Geoff Storbeck covering frontend development, web performance, security, DevOps, and practical tooling.</description>
    <language>en</language>
    <atom:link href="https://storbeck.dev/feed.xml" rel="self" type="application/rss+xml" />
    <lastBuildDate>Mon, 27 Oct 2025 15:02:17 +0000</lastBuildDate>

    <item>
      <title>A Tiny MCP To Track App Store Feedback</title>
      <link>https://storbeck.dev/posts/2025-10-27-creating-appstore-mcp-server.html</link>
      <guid>https://storbeck.dev/posts/2025-10-27-creating-appstore-mcp-server.html</guid>
      <pubDate>Mon, 27 Oct 2025 15:02:17 +0000</pubDate>
      <description>Keep a free, daily pulse by pulling App Store reviews into an AI‑enabled loop, bucketing wins vs fixes, and shipping low‑hanging improvements fast.</description>
    </item>

    <item>
      <title>React Context vs Zustand vs Jotai — A Visual Guide</title>
      <link>https://storbeck.dev/posts/2025-10-26-react-state-updates-visual-guide.html</link>
      <guid>https://storbeck.dev/posts/2025-10-26-react-state-updates-visual-guide.html</guid>
      <pubDate>Mon, 27 Oct 2025 10:32:01 +0000</pubDate>
      <description>See why Context rerenders every consumer and how Zustand/Jotai keep updates narrow — three tiny, dependency‑free demos with render counters.</description>
    </item>

    <item>
      <title>Bodywork and Interfaces</title>
      <link>https://storbeck.dev/posts/2025-10-22-bodywork-and-interfaces.html</link>
      <guid>https://storbeck.dev/posts/2025-10-22-bodywork-and-interfaces.html</guid>
      <pubDate>Wed, 22 Oct 2025 16:03:29 +0000</pubDate>
      <description>Note from time around auto body repair shops, and why interfaces need the same patient, layer-by-layer inspection if you want them to actually shine.</description>
    </item>

    <item>
      <title>Vibe Coding Fundamentals — Practical AI‑Powered Development</title>
      <link>https://storbeck.dev/posts/2025-10-19-vibe-coding-fundamentals.html</link>
      <guid>https://storbeck.dev/posts/2025-10-19-vibe-coding-fundamentals.html</guid>
      <pubDate>Sun, 19 Oct 2025 11:50:17 +0000</pubDate>
      <description>Announcing my ebook: Vibe Coding Fundamentals — practical guidance for shipping real features with AI as a staff engineer.</description>
    </item>

    <item>
      <title>Automating Persona‑Driven Usability Testing with Playwright MCP</title>
      <link>https://storbeck.dev/posts/2025-10-17-playwright-automated-usability-testing.html</link>
      <guid>https://storbeck.dev/posts/2025-10-17-playwright-automated-usability-testing.html</guid>
      <pubDate>Sun, 19 Oct 2025 12:21:49 +0000</pubDate>
      <description>Automate persona‑driven usability testing with Playwright MCP. Use a demo repo of personas and system instructions to generate screenshots and UX reports. Fast signal before real studies.</description>
    </item>

    <item>
      <title>Tombstones, Timestamps, and Gossip: Cassandra’s Way of Staying Consistent</title>
      <link>https://storbeck.dev/posts/2025-10-17-cassandra-tombstones-timestamps-compaction.html</link>
      <guid>https://storbeck.dev/posts/2025-10-17-cassandra-tombstones-timestamps-compaction.html</guid>
      <pubDate>Fri, 17 Oct 2025 12:54:37 +0000</pubDate>
      <description>A conversational tour of Cassandra’s tombstones, timestamps, SSTables, compaction, read repair, and the gossip protocol — plus lessons you can borrow for other systems.</description>
    </item>

    <item>
      <title>Browse Tor with Claude (curl + socks5h)</title>
      <link>https://storbeck.dev/posts/2025-10-16-tor-proxy-cli.html</link>
      <guid>https://storbeck.dev/posts/2025-10-16-tor-proxy-cli.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:42 +0000</pubDate>
      <description>Browse Tor with Claude using curl over socks5h: simple setup, fast lookups via Ahmia, and how to prompt Claude to find and skim .onion sites like a search engine.</description>
    </item>

    <item>
      <title>Textmode Vibes That Move (ASCII → Animated Image)</title>
      <link>https://storbeck.dev/posts/2025-10-16-moving-zine-ascii.html</link>
      <guid>https://storbeck.dev/posts/2025-10-16-moving-zine-ascii.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:40 +0000</pubDate>
      <description>Make a moving, zine‑style background by generating ASCII art with Linux tools and rendering it into an animated image with ImageMagick—no CSS or JavaScript required.</description>
    </item>

    <item>
      <title>Light &amp; Color Ideas for Modern Frontend</title>
      <link>https://storbeck.dev/posts/2025-10-16-light-and-color-principles-frontend.html</link>
      <guid>https://storbeck.dev/posts/2025-10-16-light-and-color-principles-frontend.html</guid>
      <pubDate>Fri, 17 Oct 2025 00:24:35 +0000</pubDate>
      <description>Practical UI patterns: modular rhythm, natural motion, OKLCH palettes, hierarchy, tiny charts, and accessible status—with an interactive palette and copy‑paste code.</description>
    </item>

    <item>
      <title>Gooey SVG (No CSS/JS)</title>
      <link>https://storbeck.dev/posts/2025-10-16-gooey-svg.html</link>
      <guid>https://storbeck.dev/posts/2025-10-16-gooey-svg.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:34 +0000</pubDate>
      <description>Create a gooey, blobby merge effect using pure SVG filters — no external CSS or JavaScript. Includes a minimal filter and two copy/paste examples.</description>
    </item>

    <item>
      <title>Don’t Say “Build a Beautiful UI” — Use References</title>
      <link>https://storbeck.dev/posts/2025-10-16-design-prompts-references.html</link>
      <guid>https://storbeck.dev/posts/2025-10-16-design-prompts-references.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:29:57 +0000</pubDate>
      <description>Don’t prompt agents to ‘build a beautiful UI’. Beauty is undefined. Give concrete visual references and style guides instead. Includes before/after prompts and a calculator mini‑demo with multiple reference styles.</description>
    </item>

    <item>
      <title>Hand‑Held Card Fan (Lerped)</title>
      <link>https://storbeck.dev/posts/2025-10-16-card-deck-lerp.html</link>
      <guid>https://storbeck.dev/posts/2025-10-16-card-deck-lerp.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:27 +0000</pubDate>
      <description>A tiny HTML/CSS/JS demo that fans, opens, and rotates a deck of cards with smooth lerped transforms — no frameworks.</description>
    </item>

    <item>
      <title>Give Claude Code Unrestricted Root (via 1Password) — Dangerous, Test-Only</title>
      <link>https://storbeck.dev/posts/2025-10-15-unattended-root-with-1password.html</link>
      <guid>https://storbeck.dev/posts/2025-10-15-unattended-root-with-1password.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:25 +0000</pubDate>
      <description>Security engineering note: how to let Claude Code (or similar agents) obtain root without prompts using a 1Password service account and op CLI. Extremely risky; test-only with strong safeguards.</description>
    </item>

    <item>
      <title>Remove Dead Code with Knip (Streamline Before Upgrades)</title>
      <link>https://storbeck.dev/posts/2025-10-15-remove-dead-code-with-knip.html</link>
      <guid>https://storbeck.dev/posts/2025-10-15-remove-dead-code-with-knip.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:23 +0000</pubDate>
      <description>Use Knip to find and remove dead code, shrink context for AI and humans, and declutter before big upgrades. Includes quick start and iterative cleanup tips.</description>
    </item>

    <item>
      <title>Rainbow Border with Modern CSS (One Rule)</title>
      <link>https://storbeck.dev/posts/2025-10-15-modern-rainbow-border-css.html</link>
      <guid>https://storbeck.dev/posts/2025-10-15-modern-rainbow-border-css.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:20 +0000</pubDate>
      <description>Minimal, copy‑paste CSS to make a rainbow border using layered backgrounds and conic‑gradient. One rule. No extra markup.</description>
    </item>

    <item>
      <title>Drop‑in Lottie Animations</title>
      <link>https://storbeck.dev/posts/2025-10-15-lottie-quick-embed.html</link>
      <guid>https://storbeck.dev/posts/2025-10-15-lottie-quick-embed.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:18 +0000</pubDate>
      <description>Drop‑in animations with Lottie web components. Designers export Lottie; developers embed a local .lottie or JSON with one tag—no JavaScript to write or CSS transforms to rebuild.</description>
    </item>

    <item>
      <title>Simple Math for Better UI Motion</title>
      <link>https://storbeck.dev/posts/2025-10-15-juicing-ui-with-math.html</link>
      <guid>https://storbeck.dev/posts/2025-10-15-juicing-ui-with-math.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:15 +0000</pubDate>
      <description>Use noise, nonlinear intensity, and smoothing to make UI motion feel deliberate and calm, not jittery.</description>
    </item>

    <item>
      <title>Preventing Secrets from Leaking in Git Repos (Pre‑commit Hook)</title>
      <link>https://storbeck.dev/posts/2025-10-15-git-precommit-noseyparker.html</link>
      <guid>https://storbeck.dev/posts/2025-10-15-git-precommit-noseyparker.html</guid>
      <pubDate>Thu, 16 Oct 2025 23:13:13 +0000</pubDate>
      <description>AI can slip secrets into commits. Offensive security teams use Nosey Parker to find credentials; you can use it pre-commit to stop leaks before they land.</description>
    </item>

  </channel>
</rss>
